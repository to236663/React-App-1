{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tommy\\\\OneDrive\\\\Documents\\\\Desktop\\\\React-App-1\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an\r\n * unordered list.\r\n * @returns Component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems\n  } = _ref;\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n  let [currentMenuItems, setCurrentMenuItems] = useState(initialMenuItems);\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\n  let [filter, setFilter] = useState(\"\");\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems(prevMenuItems => [newMenuItem, newMenuItem]);\n      setNewMenuItem(\"\");\n      console.log(\"Added menu item\");\n      //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\n      //   // This involves adding a parameter and changing a class instance variable (props).\n      //   setMenuItems([item, ...menuItems])\n    }\n  }, [newMenuItem]);\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n  let filteredMenuItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()));\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"IQf0DLxUOoHQrEoBOTZt6W81sm0=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","initialMenuItems","newMenuItem","setNewMenuItem","currentMenuItems","setCurrentMenuItems","menuItems","setMenuItems","filter","setFilter","addMenuItem","trim","prevMenuItems","console","log","filteredMenuItems","item","toLowerCase","includes","map","index","event","target","value"],"sources":["C:/Users/tommy/OneDrive/Documents/Desktop/React-App-1/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\r\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an\r\n * unordered list.\r\n * @returns Component\r\n */\r\nexport default function Sidebar({initialMenuItems}) {\r\n  let [newMenuItem, setNewMenuItem] = useState(\"\")\r\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\r\n  let [currentMenuItems, setCurrentMenuItems] = useState(initialMenuItems)\r\n  let [menuItems, setMenuItems] = useState(initialMenuItems)\r\n  let [filter, setFilter] = useState(\"\")\r\n  // Adds a single string passed in as parameter to the state element\r\n  // \"menuItems\" that holds the set of current menu items.\r\n  let addMenuItem = useCallback(() => {\r\n    if (newMenuItem.trim () !== \"\") {\r\n      setMenuItems((prevMenuItems) => [newMenuItem, newMenuItem])\r\n      setNewMenuItem(\"\") \r\n      console.log(\"Added menu item\")\r\n    //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\r\n    //   // This involves adding a parameter and changing a class instance variable (props).\r\n    //   setMenuItems([item, ...menuItems])\r\n    }\r\n  }, [newMenuItem])\r\n\r\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\r\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\r\n  let filteredMenuItems = menuItems.filter((item) => item.toLowerCase().includes(filter.toLowerCase()))\r\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\r\n  // its own item.\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {filteredMenuItems.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}  \r\n      </ul>\r\n      <input\r\n        type=\"text\"\r\n        id=\"newMenuItemValue\"\r\n        value={newMenuItem}\r\n        onChange={(event) => setNewMenuItem(event.target.value)}\r\n      ></input>\r\n      <br />\r\n      <button onClick={addMenuItem}>Add Item</button>\r\n      <br />\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n        placeholder=\"Filter by...\"\r\n      ></input>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AAJA;AAKA,eAAe,SAASC,OAAO,OAAqB;EAAA;EAAA,IAApB;IAACC;EAAgB,CAAC;EAChD,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,IAAI,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAACG,gBAAgB,CAAC;EACxE,IAAI,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACG,gBAAgB,CAAC;EAC1D,IAAI,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA,IAAIY,WAAW,GAAGX,WAAW,CAAC,MAAM;IAClC,IAAIG,WAAW,CAACS,IAAI,EAAG,KAAK,EAAE,EAAE;MAC9BJ,YAAY,CAAEK,aAAa,IAAK,CAACV,WAAW,EAAEA,WAAW,CAAC,CAAC;MAC3DC,cAAc,CAAC,EAAE,CAAC;MAClBU,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;MACA;MACA;IACA;EACF,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;;EAEjB;EACA;EACA,IAAIa,iBAAiB,GAAGT,SAAS,CAACE,MAAM,CAAEQ,IAAI,IAAKA,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACV,MAAM,CAACS,WAAW,EAAE,CAAC,CAAC;EACrG;EACA;EACA,oBACE;IAAA,wBACE;MAAA,UACGF,iBAAiB,CAACI,GAAG,CAAC,CAACH,IAAI,EAAEI,KAAK,kBACjC;QAAA,UAAiBJ;MAAI,GAAZI,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAElB,WAAY;MACnB,QAAQ,EAAGmB,KAAK,IAAKlB,cAAc,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAEb,WAAY;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGa,KAAK,IAAKZ,SAAS,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAjDuBvB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}